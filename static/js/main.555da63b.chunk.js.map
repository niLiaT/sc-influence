{"version":3,"sources":["CommentsBar.js","UndirectedGraph.js","hooks/useD3.js","App.js","reportWebVitals.js","index.js"],"names":["CommentsBar","props","useState","id","comments","data","setData","onAccountChange","useCallback","account","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","onAccountChangeRef","current","className","map","d","onClick","window","open","article","opinion","UndirectedGraph","useRef","ref","renderChartFn","dependencies","React","useEffect","d3","useD3","svg","selectAll","remove","color","domain","range","height","width","links","Object","create","nodes","simulation","force","nodeId","strength","value","attr","opacity1","opacity2","link","append","join","node","change","call","on","event","active","alphaTarget","restart","fx","x","fy","y","drag","style","o","a","b","thisOpacity","target","linkedById","this","setAttribute","source","index","text","forEach","Math","max","min","marginRight","marginLeft","App","state","setState","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.555da63b.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport './CommentsBar.css';\n\nfunction CommentsBar(props) {\n  const [data, setData] = useState({\n      id: \"\",\n      comments: []\n  })\n\n  const onAccountChange = useCallback((account) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ id: account })\n    };\n    // fetch('http://127.0.0.1:8000/get-data/comments', requestOptions)\n    fetch('https://sc-backend-333008.de.r.appspot.com/get-data/comments', requestOptions)\n        .then(response => response.json())\n        .then(data => setData({\n          id: account,\n          comments: data\n        }));\n    }, [])\n\n    props.onAccountChangeRef.current = onAccountChange;\n\n  return (\n    <div className=\"comments-wrapper\">\n      <div>{ data.id }</div>\n      { data.comments.map(\n        d => (\n          <div className=\"comment\" onClick={ () => window.open(d.article, \"_blank\") } key={ d.id } >{ d.opinion }</div>\n        )\n      ) }\n    </div>\n  )\n}\n\nexport default CommentsBar;","// Model d3 as a component\n\nimport { useD3 } from './hooks/useD3'\nimport React, { useState, useRef }from 'react';\nimport * as d3 from 'd3';\nimport CommentsBar from './CommentsBar';\nimport './UndirectedGraph.css';\n\nfunction UndirectedGraph({ data }) {\n  const onAccountChangeRef = useRef(null)\n\n  const ref = useD3(\n    (svg) => {\n      svg.selectAll(\"*\").remove();\n\n      const drag = simulation => {\n        function dragstarted(event, d) {\n          if (!event.active) simulation.alphaTarget(0.3).restart();\n          d.fx = d.x;\n          d.fy = d.y;\n        }\n\n        function dragged(event, d) {\n          d.fx = event.x;\n          d.fy = event.y;\n        }\n\n        function dragended(event, d) {\n          if (!event.active) simulation.alphaTarget(0);\n          d.fx = null;\n          d.fy = null;\n        }\n\n        return d3.drag()\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended);\n      }\n\n      var color = d3.scaleOrdinal()\n        .domain([0, 1])\n        .range([\"#56b6c2\", \"red\"])\n\n      const height = 1080\n      const width = 1920\n\n      const links = data.links.map(d => Object.create(d));\n      const nodes = data.nodes.map(d => Object.create(d));\n\n      const simulation = d3.forceSimulation(nodes)\n        .force(\"link\", d3.forceLink(links).id(d => d.nodeId).strength(d => d.value * 0.06))\n        .force(\"charge\", d3.forceManyBody().strength(-5.3))\n        .force('center', d3.forceCenter(0, 0));\n        // .force(\"x\", d3.forceX())\n        // .force(\"y\", d3.forceY());\n\n      svg.attr(\"viewBox\", [-width / 2, -height / 2, width, height]);\n\n      const link = svg.append(\"g\")\n        .attr(\"stroke\", \"#999\")\n        .attr(\"stroke-opacity\", 0.7)\n        .selectAll(\"line\")\n        .data(links)\n        .join(\"line\")\n        .attr(\"stroke-width\", d => d.value ** -1.5);\n\n      const node = svg.append(\"g\")\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"stroke-width\", 1.5)\n        .selectAll(\"circle\")\n        .data(nodes)\n        .join(\"circle\")\n        .attr(\"r\", 12)\n        .attr(\"fill\", d => color(d.change))\n        .attr(\"opacity\", 1)\n        .attr(\"id\", d => d.nodeId)\n        .call(drag(simulation))\n        .on(\"mouseover.fade\", fade(0.1, 0.1))\n        // .on(\"mouseout.fade\", fade(1, 0.7))\n        .on(\"mouseover\", function() {d3.select(this).style(\"cursor\", \"pointer\")})\n        .on(\"click\", d => {if (onAccountChangeRef.current) onAccountChangeRef.current(d.target.id)});\n        \n        node.append(\"title\")\n        .text(d => d.nodeId);\n\n      const linkedById = {};\n      data.links.forEach(d => {\n        linkedById[`${d.source},${d.target}`] = 1;\n      });\n\n      function isConnected(a, b) {\n        return linkedById[`${a},${b}`] || linkedById[`${b},${a}`] || a === b;\n      }\n\n      function fade(opacity1, opacity2) {\n        return d => {\n          node.style('stroke-opacity', function (o) {\n            const thisOpacity = isConnected(d.target.id, o.nodeId) ? 1 : opacity1;\n            this.setAttribute('fill-opacity', thisOpacity);\n            return thisOpacity;\n          });\n\n          link.style('stroke-opacity', o => (nodes[o.source.index].nodeId === d.target.id || nodes[o.target.index].nodeId === d.target.id ? 1 : opacity2));\n        };\n      }\n\n      simulation.on(\"tick\", () => {\n        link\n          .attr(\"x1\", d => d.source.x = Math.max(-width / 2, Math.min(width / 2, d.source.x)))\n          .attr(\"y1\", d => d.source.y = Math.max(-height / 2, Math.min(height / 2, d.source.y)))\n          .attr(\"x2\", d => d.target.x = Math.max(-width / 2, Math.min(width / 2, d.target.x)))\n          .attr(\"y2\", d => d.target.y = Math.max(-height / 2, Math.min(height / 2, d.target.y)));\n\n        node\n          .attr(\"cx\", d => d.x = Math.max(-width / 2, Math.min(width / 2, d.x)))\n          .attr(\"cy\", d => d.y = Math.max(-height / 2, Math.min(height / 2, d.y)));\n      });\n    }\n  );\n\n  // Render svg as a plot area\n  return (\n    <div className=\"wrapper\" >\n      <svg\n        ref={ref}\n        style={{\n          height: \"100%\",\n          width: \"auto\",\n          marginRight: \"0px\",\n          marginLeft: \"0px\",\n        }}\n        >\n        <g className=\"plot-area\" />\n        <g className=\"x-axis\" />\n        <g className=\"y-axis\" />\n      </svg>\n      <CommentsBar onAccountChangeRef={ onAccountChangeRef } ></CommentsBar>\n    </div>\n  );\n}\n\nexport default UndirectedGraph;","// D3js directly manipulate to the DOM when Reactjs is not. Create a react hook to make d3 be useable.\n\nimport React from 'react';\nimport * as d3 from 'd3';\n\nexport const useD3 = (renderChartFn, dependencies) => {\n  const ref = React.useRef();\n\n  React.useEffect(() => {\n    renderChartFn(d3.select(ref.current));\n    return () => { };\n  }, dependencies);\n  return ref;\n}","import React, { Component } from 'react';\nimport './App.css';\n\nimport UndirectedGraph from './UndirectedGraph';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnodes: [],\n\t\t\tlinks: []\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\t// fetch('http://127.0.0.1:8000/api/graph/')\n\t\tfetch('https://sc-backend-333008.de.r.appspot.com/api/graph/')\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tnodes: data.nodes,\n\t\t\t\t\tlinks: data.links\n\t\t\t\t})\n\t\t\t})\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t<UndirectedGraph data={ this.state } />\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t)}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}